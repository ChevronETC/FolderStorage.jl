pool:
  vmImage: 'Ubuntu 16.04'

variables:
  - group: FolderStorage

steps:
- task: DownloadSecureFile@1
  inputs:
    secureFile: id_rsa

- task: DownloadSecureFile@1
  inputs:
    secureFile: id_rsa.pub

- task: DownloadSecureFile@1
  inputs:
    secureFile: known_hosts

- script: |
    mkdir ~/.ssh
    cp $(Agent.TempDirectory)/id_rsa ~/.ssh/id_rsa
    cp $(Agent.TempDirectory)/id_rsa.pub ~/.ssh/id_rsa.pub
    cp $(Agent.TempDirectory)/known_hosts ~/.ssh/known_hosts
    chmod 600 ~/.ssh/id_rsa
    chmod 644 ~/.ssh/id_rsa.pub
    chmod 644 ~/.ssh/known_hosts

    MYJULIA_VERSION_MINOR=`echo ${MYJULIA_VERSION} | sed 's/\.[^.]*$//'`

    sudo wget https://julialang-s3.julialang.org/bin/linux/x64/${MYJULIA_VERSION_MINOR}/julia-${MYJULIA_VERSION}-linux-x86_64.tar.gz
    sudo mkdir -p /opt/julia
    sudo tar --strip-components=1 -xzvf julia-${MYJULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia

    sudo wget https://releases.hashicorp.com/packer/${MYPACKER_VERSION}/packer_${MYPACKER_VERSION}_linux_amd64.zip
    sudo mkdir -p /opt/packer
    sudo unzip packer_1.3.4_linux_amd64.zip -d /opt/packer

    mkdir -p $(HOME)/.julia/dev

    cp -r ${BUILD_SOURCESDIRECTORY} $(HOME)/.julia/dev/FolderStorage

    /opt/julia/bin/julia -e 'using Pkg; pkg"instantiate"'
    git clone -b tqff/ssh chevron@vs-ssh.visualstudio.com:v3/chevron/ETC-ESD-PkgRegistry.jl/PkgRegistry.jl $(HOME)/.julia/registries/ChevronETC

    /opt/julia/bin/julia -e 'using Pkg; pkg"add Random Serialization"'
    /opt/julia/bin/julia -e 'using Pkg; pkg"develop AbstractStorage"'
    /opt/julia/bin/julia -e 'using Pkg; pkg"develop --local $(HOME)/.julia/dev/FolderStorage"'
    /opt/julia/bin/julia -e 'using Pkg; pkg"build FolderStorage"'
    /opt/julia/bin/julia -e 'using Pkg; pkg"precompile"'
  env:
    MYPAT: $(PAT)
    MYJULIA_VERSION: $(JULIA_VERSION)
    MYPACKER_VERSION: $(PACKER_VERSION)
  displayName: 'Install system'

- script: |
    /opt/julia/bin/julia -e 'using Pkg; pkg"test FolderStorage"'
  displayName: 'Run unit-tests'

- task: DownloadSecureFile@1
  inputs:
    secureFile: account.json

- task: DownloadSecureFile@1
  inputs:
    secureFile: id_rsa

- script: |
    git clone chevron@vs-ssh.visualstudio.com:v3/chevron/ETC-ESD-jcloud/jcloud /tmp/jcloud
    cd /tmp/jcloud
    cp $(HOME)/.ssh/id_rsa ./ssh/id_rsa
    cp $(HOME)/.ssh/id_rsa.pub ./ssh/id_rsa.pub
    cp $(HOME)/.ssh/known_hosts ./ssh/known_hosts
    cp $(Agent.TempDirectory)/account.json ./account.json
    /opt/packer/packer build --force --only=googlecompute jcloud.json
  env:
    MYPAT: $(PAT)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Deploy to Google Cloud'
